server {

    listen 8080 ssl;
    server_name 127.0.0.1 localhost;
    ssl_certificate /etc/nginx/ssl/ssl-certif.crt;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    error_page 497 301 =307 https://$host:$server_port$request_uri;

    error_log /var/log/nginx/error.log warn;

    access_log off;
    client_body_buffer_size 1M;
    client_max_body_size 50M;
    # access_log /var/log/nginx/access.log custom_proxy_log;

    location / {
        proxy_pass http://matcha:3000;  # Proxy to the matcha service

        # Use HTTP/1.1 to support keep-alive and upgrade connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        # Forward client information to the backend
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Add the client's IP to the X-Forwarded-For chain
        proxy_set_header X-Forwarded-Host $host;                     # Forward the original Host header
        proxy_set_header X-Forwarded-Port $server_port;              # Pass the port the client connected to
        proxy_set_header X-Forwarded-Proto $scheme;                  # Forward the protocol (http or https)

        # Disable altering the response Location headers
        proxy_redirect off;
    }

    # Socket.io location
    location /socket.io {
        proxy_pass http://matcha:3000;

        proxy_max_temp_file_size 8192m;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect off;
    }
}
